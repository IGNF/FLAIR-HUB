import pandas as pd

from pathlib import Path
from typing import Union
from pytorch_lightning.utilities.rank_zero import rank_zero_only  
# from codecarbon import OfflineEmissionsTracker



#    if config['saving']['codecarbon']:  # TODO CODECARBON
#        node_id = os.getenv("SLURM_NODEID", "0")
#        output_emission_dir = Path(out_dir) / f"node_{node_id}_emissions"
#        output_emission_dir.mkdir(parents=True, exist_ok=True)
#        tracker = OfflineEmissionsTracker(
#            output_dir=str(output_emission_dir),
#            project_name=f'flair-hub | node_{node_id}',
#            log_level="error",
#            country_iso_code='FRA'
#        )
#        tracker.start()



@rank_zero_only
def emission_tracking_summary(out_dir: Union[str, Path]) -> None:
    """
    Summarizes the emissions data by aggregating logs from all nodes.
    This function reads emissions data from CSV files generated by 
    CodeCarbon's trackers for individual nodes. It aggregates the data 
    and prints a summary of total CO2 emissions, energy consumption, 
    and energy usage breakdown by CPU, GPU, and RAM.

    Args:
        out_dir (Union[str, Path]): Path to the output directory where emissions logs are stored.
    Returns:
        None
    """
    emission_logs_dir = Path(out_dir)
    emission_files = emission_logs_dir.glob("node_*/emissions.csv")

    # Load and combine all logs into a single DataFrame
    dfs = [pd.read_csv(file) for file in emission_files]
    aggregated = pd.concat(dfs).sum(numeric_only=True)

    # Print the aggregated emissions summary
    print("\n----- Total Emissions Summary -----")
    print(f"Total CO2 emissions: {aggregated['emissions']:.6f} kg CO2e")
    print(f"Total energy consumption: {aggregated['energy_consumed']:.6f} kWh")
    print(f"Total energy CPU: {aggregated['cpu_energy']:.6f} kWh")
    print(f"Total energy GPU: {aggregated['gpu_energy']:.6f} kWh")
    print(f"Total energy RAM: {aggregated['ram_energy']:.6f} kWh")
    print(f"Measures done: {aggregated['energy_consumed']:.6f}")
